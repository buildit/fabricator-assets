// Breakpoint Map
//These are to be used with respond-to mixin. They are defined based on layout, not device.
//Default is 100% width, mobile style. Breakpoints override "mobile first" styles.
$breakpoints: (
  'small' : $small, 
  'medium' : $medium, 
  'large' : $large, 
  'ex-large' : $ex-large
);
// http://www.sitepoint.com/managing-responsive-breakpoints-sass/
@mixin respond-to($breakpoint) {
  // Retrieves the value from the key
  $value: map-get($breakpoints, $breakpoint);

  // If the key exists in the map
  @if $value != null {
    // Prints a media query based on the value
    @media (min-width: $value) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@mixin section_padding($type:'') {
	padding: 1rem;

	@include respond-to ('small') {
		padding: 2rem;
  }
  
  @include respond-to ('large') {
    padding: 2.2rem;
  }

  @include respond-to ('ex-large') {
    padding: 2.4rem;
    
  }

	@if ($type== 'nav') {
    padding: 0 1rem;
    
  }
    
}

@mixin section_margin ($type:'') {
  margin: 5rem 0;
}

@mixin greybox ($type:'')  {
  background-color: $light-grey-4;
  display: inline-block;
  margin-right: 1rem;
  height: 40px; 
  width: 100px;

  @if ($type== 'omega') {
    margin-right: 0;
    
  }
}

@mixin button ($type:''){
  background-color: #01A982;
  border: 0;
  color: #ffffff;
  cursor: pointer;
  font-size: 1.1875rem;
  font-weight: 600;
  letter-spacing: 0.04167em;
  line-height: 24px;
  padding: 6px 22px;
  text-align: center;
  text-transform: uppercase;
  transition: 0.1s ease-in-out;
}

@mixin clearfix() {
  &::after {
    display: block;
    content: "";
    clear: both;
  }
}

